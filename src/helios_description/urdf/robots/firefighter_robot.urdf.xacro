<?xml version="1.0"?>
<robot name="firefighter_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Properties -->
    <xacro:property name="base_width" value="0.4"/>
    <xacro:property name="base_length" value="0.5"/>
    <xacro:property name="base_height" value="0.2"/>
    <xacro:property name="wheel_radius" value="0.1"/>
    <xacro:property name="wheel_width" value="0.05"/>
    <xacro:property name="wheel_separation" value="0.44"/>
    <xacro:property name="camera_size" value="0.05"/>

    <!-- Materials -->
    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <!-- Base Link -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="5.0"/>
            <inertia ixx="0.0395" ixy="0" ixz="0" iyy="0.0395" iyz="0" izz="0.0790"/>
        </inertial>
    </link>

    <!-- Wheel Macro -->
    <xacro:macro name="wheel" params="prefix x_offset y_offset">
        <link name="${prefix}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="0.5"/>
                <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
            </inertial>
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_wheel"/>
            <origin xyz="${x_offset} ${y_offset} 0" rpy="${pi/2} 0 0"/>
            <axis xyz="0 0 1"/>
        </joint>
    </xacro:macro>

    <!-- Create wheels -->
    <xacro:wheel prefix="left" x_offset="0" y_offset="${wheel_separation/2}"/>
    <xacro:wheel prefix="right" x_offset="0" y_offset="${-wheel_separation/2}"/>

    <!-- 2D Lidar Link -->
    <link name="lidar_link">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
        </inertial>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar_link"/>
        <origin xyz="0 0 ${base_height/2 + 0.02}" rpy="0 0 0"/>
    </joint>

    <!-- Thermal Camera Link -->
    <link name="thermal_camera_link">
        <visual>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
        </inertial>
    </link>

    <joint name="thermal_camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="thermal_camera_link"/>
        <origin xyz="${base_length/2 + camera_size/2} 0 ${base_height/4}" rpy="0 0 0"/>
    </joint>

    <!-- Gazebo plugins -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <wheelSeparation>${wheel_separation}</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <publishWheelTF>true</publishWheelTF>
            <publishWheelJointState>true</publishWheelJointState>
        </plugin>
    </gazebo>

    <!-- Lidar Plugin -->
    <gazebo reference="lidar_link">
        <sensor type="ray" name="lidar_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>lidar_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Thermal Camera Plugin -->
    <gazebo reference="thermal_camera_link">
        <sensor type="camera" name="thermal_camera_sensor">
            <update_rate>30.0</update_rate>
            <camera name="thermal">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="thermal_camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>thermal_camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>thermal_camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>
</robot>